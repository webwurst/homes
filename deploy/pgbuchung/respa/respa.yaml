---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: respa
  labels:
    app: respa
spec:
  selector:
    matchLabels:
      app: respa
  template:
    metadata:
      labels:
        app: respa
    spec:
      initContainers:
      - name: pg-isready
        image: docker.io/webwurst/respa-postgis:tku-v1.9.2
        command:
        - sh
        - -c
        - until pg_isready -h postgres -p 5432; do echo waiting for database; sleep 2; done;
      containers:
      - name: respa
        image: docker.io/webwurst/respa:tku-v1.9.2
        # for possible settings see https://github.com/City-of-Turku/respa?tab=readme-ov-file#settings
        # and https://docs.djangoproject.com/en/5.0/ref/settings/
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: respa
              key: secret-key
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: respa
              key: postgres-password
        - name: DATABASE_URL
          value: "postgis://respa:$(POSTGRES_PASSWORD)@postgres:5432/respa"
        ports:
        - name: http
          containerPort: 8000
        resources: {}
        volumeMounts:
        - name: uwsgi-config
          mountPath: /srv/app/deploy/uwsgi.ini
          subPath: uwsgi.ini
        # - name: media
        #   mountPath: /var/www/media

      - name: respa-nginx
        image: nginx:alpine
        ports:
        - name: http
          protocol: TCP
          containerPort: 8080
        resources: {}
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/nginx.conf
          subPath: nginx.conf

      volumes:
      # - name: media
      #   emptyDir: {}
        # persistentVolumeClaim:
        #   claimName: respa-media
      - name: uwsgi-config
        configMap:
          name: uwsgi
      - name: nginx-config
        configMap:
          name: nginx

---
apiVersion: v1
kind: Service
metadata:
  name: respa
spec:
  ports:
  - name: http
    appProtocol: http
    port: 8080
  selector:
    app: respa

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: respa
spec:
  ingressClassName: nginx
  rules:
  - host: respa.webwur.st
    http:
      paths:
      - backend:
          service:
            name: respa
            port:
              number: 8000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - respa.webwur.st
    secretName: respa-cert

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: respa
spec:
  dnsNames:
  - respa.webwur.st
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-cluster-issuer
  secretName: nextcloud-cert
