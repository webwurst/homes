apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  annotations:
    metadata.weave.works/description: This is the Weave GitOps Dashboard. It provides
      a simple way to get insights into your GitOps workloads.
  name: flux-ui
  namespace: flux-system
spec:
  interval: 1h0m
  # releaseName: flux-ui
  chart:
    spec:
      # https://github.com/weaveworks/weave-gitops/blob/main/charts/gitops-server/Chart.yaml#L16
      chart: weave-gitops
      version: "~4.0.36"
      sourceRef:
        kind: HelmRepository
        name: weaveworks
  install:
    crds: Skip
  upgrade:
    crds: Skip

  valuesFrom:
  - kind: Secret
    name: flux-ui-helm-secrets

  values:
    # https://github.com/weaveworks/weave-gitops/blob/main/charts/gitops-server/values.yaml

    # Should the 'oidc-auth' secret be created. For a detailed
    # explanation of these attributes please see our documentation:
    # https://docs.gitops.weave.works/docs/configuration/securing-access-to-the-dashboard/#login-via-an-oidc-provider
    oidcSecret:
      create: true
      issuerURL: https://dex.webwur.st
      redirectURL: https://flux.webwur.st/oauth2/callback
      clientID: flux-ui
      # for `clientSecret` see ./helm-secrets.yaml

      # -- If non empty, additional keys can be added to the OIDC secret
      additionalKeys: {}
      # additionalKeys:
      #   claimUsername: "email"
      #   claimGroups: "groups"
      #   customScopes: "openid,offline_access,email,groups"

    rbac:
      # -- Specifies whether the clusterRole & binding to the service account should be created
      create: true
      # -- If non-empty, this limits the resources that the service
      # account can impersonate. This applies to both users and groups, e.g.
      # `['user1@corporation.com', 'user2@corporation.com', 'operations']`
      impersonationResourceNames: []
      # -- Limit the type of principal that can be impersonated
      impersonationResources: ["users", "groups"]
      # -- If non-empty, this limits the secrets that can be accessed by
      # the service account to the specified ones, e.g. `['weave-gitops-enterprise-credentials']`
      # viewSecretsResourceNames: ["cluster-user-auth", "oidc-auth"]
      viewSecretsResourceNames: ["cluster-user-auth", "oidc-auth"]
      # -- If non-empty, these additional rules will be appended to the RBAC role and the cluster role.
      # for example,
      # additionalRules:
      # - apiGroups: ["infra.contrib.fluxcd.io"]
      #   resources: ["terraforms"]
      #   verbs: [ "get", "list", "patch" ]
      additionalRules: []


    # FIXME find out about mapping to admin-group over oidc instead..
    adminUser:
      create: true
      # -- Specifies whether the clusterRole & binding to the admin user should be created.
      # Will be created only if `adminUser.create` is enabled. Without this,
      # the adminUser will only be able to see resources in the target namespace.
      createClusterRole: false
      createSecret: true
      username: admin
      # for `passwordHash` see ./helm-secrets.yaml

    ingress:
      enabled: true
      className: nginx
      hosts:
      - host: flux.webwur.st
        paths:
        - path: /
          pathType: ImplementationSpecific
      tls:
      - secretName: flux-ui-cert
        hosts:
        - flux.webwur.st

    # FIXME add service-monitor
    metrics:
      enabled: false
      service:
        port: 2112
        # annotations:
        #   prometheus.io/scrape: "true"
        #   prometheus.io/path: "/metrics"
        #   prometheus.io/port: "{{ .Values.metrics.service.port }}"
